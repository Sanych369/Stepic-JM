/*

Реализуйте метод factorial, вычисляющий факториал заданного натурального числа.

Факториал N вычисляется как 1 ⋅ 2 ⋅ ... ⋅ N.

Поскольку это очень быстро растущая функция, то даже для небольших N вместимости типов int и long очень скоро не хватит. Поэтому будем использовать BigInteger.

Воспользуйтесь предоставленным шаблоном. Декларацию класса, метод main и обработку ввода-вывода добавит проверяющая система.

Пример ввода 1: 1
Пример возвращаемого значения 1: 1

Пример ввода 2: 3
Пример возвращаемого значения 2: 6

Требования:
1. Метод должен быть public.
1. Метод должен быть static.
3. Передаваемый параметр должен иметь тип int.

*/

public static BigInteger factorial(int value) {
    return value == 0 ? BigInteger.ONE : BigInteger.valueOf(value).multiply(factorial(value-1));
}
// Тернарный оператор ? :
// BigInteger.ONE = 1
// Если возвратное значение value == 0 (true), то вернуть BigInteger.ONE(цифру 1)
// Если возвратное значение value == 0 (false), то вернуть value * value -1, пока value == 0 не станет (true)
// Рекурсивный метод использует сам себя, пока не выпонится условие(в данном случае value == 0 должно дать true).
